options:
  parameters:
    author: Defective
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: hb
    hier_block_src_path: '.:'
    id: stdin_cmd
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Standard input to command
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: blocks_null_sink_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [352, 120.0]
    rotation: 0
    state: true
- name: cmd_reader
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport sys\nimport\
      \ struct\n\nclass blk(gr.basic_block):\n\n    def __init__(self):  # only default\
      \ arguments here\n        gr.sync_block.__init__(\n            self,\n     \
      \       name='Standard input to command',   # will show up in GRC\n        \
      \    in_sig=None,\n            out_sig=[np.float32]\n        )\n        self.cb\
      \ = {}\n        \n    def set_callbacks(self, freq, gain):\n        self.cb\
      \ = {\n            1.0: freq,\n            2.0: gain\n        }\n\n    def work(self,\
      \ input_items, outp):\n        cmdData = sys.stdin.buffer.read(4)\n        payloadData\
      \ = sys.stdin.buffer.read(4)\n        cmd = struct.unpack(\">f\", cmdData)[0]\n\
      \        payload = struct.unpack(\">f\", payloadData)[0]\n        \n       \
      \ if cmd in self.cb:\n            self.cb[cmd](payload)\n        \n        return\
      \ 0\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Standard input to command', 'blk', [], [], [('0', 'float', 1)], '',
      [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 120.0]
    rotation: 0
    state: true

connections:
- [cmd_reader, '0', blocks_null_sink_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.5.1
